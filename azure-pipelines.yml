# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

stages:
  - stage: Build

    pool:
      name: Default

    jobs:
      - job: Build
        displayName: "Angular App Build"
        workspace:
          clean: all
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - task: UseDotNet@2

          - task: Npm@1
            inputs:
              command: custom
              customCommand: "install"
              workingDir: '$(System.DefaultWorkingDirectory)'
              verbose: false
            displayName: "npm install"
              
          - task: Npm@1
            inputs:
              command: custom
              customCommand: "run build"
              workingDir: '$(System.DefaultWorkingDirectory)'
              verbose: false
            displayName: "Build Angular app"
          - task: Npm@1
            inputs:
              command: custom
              customCommand: "run test"
            displayName: "Test Angular app"

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/testresults/junit/unit-test-result.xml'

          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: '**/testresults/coverage/code-coverage.xml'

          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact"
            inputs:
              PathtoPublish: 'dist'
              ArtifactName: 'portfolio-ui'
              publishLocation: 'Container'

  - stage: Deploy
    pool:
      name: Default
    jobs:
    - job: DeployWebAppProd
      steps:
      - task: DockerInstaller@0
        inputs:
          dockerVersion: '23.0.5'
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'specific'
          project: '530a322f-b707-4bec-9244-9b2364009a93'
          definition: 'Portfolio'
          buildVersionToDownload: 'latest'
          allowPartiallySucceededBuilds: true
          allowFailedBuilds: true
          artifactName: 'portfolio-ui'
          targetPath: '$(Pipeline.Workspace)'
      - bash: cd $(Pipeline.Workspace); echo $(ls)
      - bash: cd $(Pipeline.Workspace)/portfolio-ui; echo $(ls)
      - task: AzureStaticWebApp@0
        inputs:
          cwd: '$(Pipeline.Workspace)'
          app_location: '/'
          skip_app_build: true
          skip_api_build: true
          verbose: true
        env:
          azure_static_web_apps_api_token: '$(deployment_token)'